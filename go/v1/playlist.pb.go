// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: protos/v1/playlist.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId uint64  `protobuf:"varint,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedBy  string  `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt  uint64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  uint64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status     uint32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Songs      []*Song `protobuf:"bytes,7,rep,name=songs,proto3" json:"songs,omitempty"`
}

func (x *Playlist) Reset() {
	*x = Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Playlist) ProtoMessage() {}

func (x *Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Playlist.ProtoReflect.Descriptor instead.
func (*Playlist) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *Playlist) GetPlaylistId() uint64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

func (x *Playlist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Playlist) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Playlist) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Playlist) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Playlist) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Playlist) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

// Get Playlist List
type GetPlaylistListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationInfo *PaginationInfo        `protobuf:"bytes,1,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
	Filter         *GetPlaylistListFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetPlaylistListRequest) Reset() {
	*x = GetPlaylistListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistListRequest) ProtoMessage() {}

func (x *GetPlaylistListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistListRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistListRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlaylistListRequest) GetPaginationInfo() *PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

func (x *GetPlaylistListRequest) GetFilter() *GetPlaylistListFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetPlaylistListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedBy       string `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` // Filter by Email
	CreatedTimeFrom uint64 `protobuf:"varint,3,opt,name=created_time_from,json=createdTimeFrom,proto3" json:"created_time_from,omitempty"`
	CreatedTimeTo   uint64 `protobuf:"varint,4,opt,name=created_time_to,json=createdTimeTo,proto3" json:"created_time_to,omitempty"`
}

func (x *GetPlaylistListFilter) Reset() {
	*x = GetPlaylistListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistListFilter) ProtoMessage() {}

func (x *GetPlaylistListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistListFilter.ProtoReflect.Descriptor instead.
func (*GetPlaylistListFilter) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlaylistListFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPlaylistListFilter) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetPlaylistListFilter) GetCreatedTimeFrom() uint64 {
	if x != nil {
		return x.CreatedTimeFrom
	}
	return 0
}

func (x *GetPlaylistListFilter) GetCreatedTimeTo() uint64 {
	if x != nil {
		return x.CreatedTimeTo
	}
	return 0
}

type GetPlaylistListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *GetPlaylistListResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error    *uint32                      `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string                      `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *GetPlaylistListResponse) Reset() {
	*x = GetPlaylistListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistListResponse) ProtoMessage() {}

func (x *GetPlaylistListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistListResponse.ProtoReflect.Descriptor instead.
func (*GetPlaylistListResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlaylistListResponse) GetData() *GetPlaylistListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetPlaylistListResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *GetPlaylistListResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type GetPlaylistListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlists  []*Playlist `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	TotalCount *uint64     `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3,oneof" json:"total_count,omitempty"`
}

func (x *GetPlaylistListResponseData) Reset() {
	*x = GetPlaylistListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistListResponseData) ProtoMessage() {}

func (x *GetPlaylistListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistListResponseData.ProtoReflect.Descriptor instead.
func (*GetPlaylistListResponseData) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{4}
}

func (x *GetPlaylistListResponseData) GetPlaylists() []*Playlist {
	if x != nil {
		return x.Playlists
	}
	return nil
}

func (x *GetPlaylistListResponseData) GetTotalCount() uint64 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// Get Playlist Details
type GetPlaylistDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId uint64 `protobuf:"varint,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
}

func (x *GetPlaylistDetailsRequest) Reset() {
	*x = GetPlaylistDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistDetailsRequest) ProtoMessage() {}

func (x *GetPlaylistDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistDetailsRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{5}
}

func (x *GetPlaylistDetailsRequest) GetPlaylistId() uint64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

type GetPlaylistDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *GetPlaylistDetailsResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error    *uint32                         `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string                         `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *GetPlaylistDetailsResponse) Reset() {
	*x = GetPlaylistDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistDetailsResponse) ProtoMessage() {}

func (x *GetPlaylistDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetPlaylistDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{6}
}

func (x *GetPlaylistDetailsResponse) GetData() *GetPlaylistDetailsResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetPlaylistDetailsResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *GetPlaylistDetailsResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type GetPlaylistDetailsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlist *Playlist `protobuf:"bytes,1,opt,name=Playlist,proto3" json:"Playlist,omitempty"`
}

func (x *GetPlaylistDetailsResponseData) Reset() {
	*x = GetPlaylistDetailsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistDetailsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistDetailsResponseData) ProtoMessage() {}

func (x *GetPlaylistDetailsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistDetailsResponseData.ProtoReflect.Descriptor instead.
func (*GetPlaylistDetailsResponseData) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{7}
}

func (x *GetPlaylistDetailsResponseData) GetPlaylist() *Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

// Create Playlist
type CreatePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlist *Playlist `protobuf:"bytes,1,opt,name=playlist,proto3" json:"playlist,omitempty"`
	SongIds  []uint64  `protobuf:"varint,2,rep,packed,name=song_ids,json=songIds,proto3" json:"song_ids,omitempty"`
}

func (x *CreatePlaylistRequest) Reset() {
	*x = CreatePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRequest) ProtoMessage() {}

func (x *CreatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePlaylistRequest) GetPlaylist() *Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *CreatePlaylistRequest) GetSongIds() []uint64 {
	if x != nil {
		return x.SongIds
	}
	return nil
}

type CreatePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *CreatePlaylistResponse) Reset() {
	*x = CreatePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistResponse) ProtoMessage() {}

func (x *CreatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*CreatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{9}
}

func (x *CreatePlaylistResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *CreatePlaylistResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

// Put Playlist
type PutPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlist *Playlist `protobuf:"bytes,1,opt,name=playlist,proto3" json:"playlist,omitempty"`
	SongIds  []uint64  `protobuf:"varint,2,rep,packed,name=song_ids,json=songIds,proto3" json:"song_ids,omitempty"`
}

func (x *PutPlaylistRequest) Reset() {
	*x = PutPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutPlaylistRequest) ProtoMessage() {}

func (x *PutPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutPlaylistRequest.ProtoReflect.Descriptor instead.
func (*PutPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{10}
}

func (x *PutPlaylistRequest) GetPlaylist() *Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *PutPlaylistRequest) GetSongIds() []uint64 {
	if x != nil {
		return x.SongIds
	}
	return nil
}

type PutPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *PutPlaylistResponse) Reset() {
	*x = PutPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutPlaylistResponse) ProtoMessage() {}

func (x *PutPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutPlaylistResponse.ProtoReflect.Descriptor instead.
func (*PutPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{11}
}

func (x *PutPlaylistResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *PutPlaylistResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

// Delete Playlist
type DeletePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId uint64 `protobuf:"varint,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
}

func (x *DeletePlaylistRequest) Reset() {
	*x = DeletePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistRequest) ProtoMessage() {}

func (x *DeletePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistRequest.ProtoReflect.Descriptor instead.
func (*DeletePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{12}
}

func (x *DeletePlaylistRequest) GetPlaylistId() uint64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

type DeletePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *DeletePlaylistResponse) Reset() {
	*x = DeletePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistResponse) ProtoMessage() {}

func (x *DeletePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistResponse.ProtoReflect.Descriptor instead.
func (*DeletePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePlaylistResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *DeletePlaylistResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type UpdatePlaylistSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId uint64   `protobuf:"varint,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	SongIds    []uint64 `protobuf:"varint,2,rep,packed,name=song_ids,json=songIds,proto3" json:"song_ids,omitempty"`
}

func (x *UpdatePlaylistSongsRequest) Reset() {
	*x = UpdatePlaylistSongsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlaylistSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistSongsRequest) ProtoMessage() {}

func (x *UpdatePlaylistSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistSongsRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistSongsRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePlaylistSongsRequest) GetPlaylistId() uint64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

func (x *UpdatePlaylistSongsRequest) GetSongIds() []uint64 {
	if x != nil {
		return x.SongIds
	}
	return nil
}

type UpdatePlaylistSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *UpdatePlaylistSongsResponse) Reset() {
	*x = UpdatePlaylistSongsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_playlist_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlaylistSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistSongsResponse) ProtoMessage() {}

func (x *UpdatePlaylistSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_playlist_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistSongsResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistSongsResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_playlist_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatePlaylistSongsResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *UpdatePlaylistSongsResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

var File_protos_v1_playlist_proto protoreflect.FileDescriptor

var file_protos_v1_playlist_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a,
	0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x05,
	0x73, 0x6f, 0x6e, 0x67, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4d, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x9e, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x3c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22,
	0xc5, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x66, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x78, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x75, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22,
	0x6a, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x38, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x73, 0x67, 0x22, 0x58, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x72,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x73, 0x67, 0x32, 0xdd, 0x08, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xb8, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x39, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0xb4, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa8, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x1a, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0xb1, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x28, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xc9, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x3a,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x3a,
	0x01, 0x2a, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_v1_playlist_proto_rawDescOnce sync.Once
	file_protos_v1_playlist_proto_rawDescData = file_protos_v1_playlist_proto_rawDesc
)

func file_protos_v1_playlist_proto_rawDescGZIP() []byte {
	file_protos_v1_playlist_proto_rawDescOnce.Do(func() {
		file_protos_v1_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_v1_playlist_proto_rawDescData)
	})
	return file_protos_v1_playlist_proto_rawDescData
}

var file_protos_v1_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_protos_v1_playlist_proto_goTypes = []interface{}{
	(*Playlist)(nil),                       // 0: music_streaming.music.playlist.Playlist
	(*GetPlaylistListRequest)(nil),         // 1: music_streaming.music.playlist.GetPlaylistListRequest
	(*GetPlaylistListFilter)(nil),          // 2: music_streaming.music.playlist.GetPlaylistListFilter
	(*GetPlaylistListResponse)(nil),        // 3: music_streaming.music.playlist.GetPlaylistListResponse
	(*GetPlaylistListResponseData)(nil),    // 4: music_streaming.music.playlist.GetPlaylistListResponseData
	(*GetPlaylistDetailsRequest)(nil),      // 5: music_streaming.music.playlist.GetPlaylistDetailsRequest
	(*GetPlaylistDetailsResponse)(nil),     // 6: music_streaming.music.playlist.GetPlaylistDetailsResponse
	(*GetPlaylistDetailsResponseData)(nil), // 7: music_streaming.music.playlist.GetPlaylistDetailsResponseData
	(*CreatePlaylistRequest)(nil),          // 8: music_streaming.music.playlist.CreatePlaylistRequest
	(*CreatePlaylistResponse)(nil),         // 9: music_streaming.music.playlist.CreatePlaylistResponse
	(*PutPlaylistRequest)(nil),             // 10: music_streaming.music.playlist.PutPlaylistRequest
	(*PutPlaylistResponse)(nil),            // 11: music_streaming.music.playlist.PutPlaylistResponse
	(*DeletePlaylistRequest)(nil),          // 12: music_streaming.music.playlist.DeletePlaylistRequest
	(*DeletePlaylistResponse)(nil),         // 13: music_streaming.music.playlist.DeletePlaylistResponse
	(*UpdatePlaylistSongsRequest)(nil),     // 14: music_streaming.music.playlist.UpdatePlaylistSongsRequest
	(*UpdatePlaylistSongsResponse)(nil),    // 15: music_streaming.music.playlist.UpdatePlaylistSongsResponse
	(*Song)(nil),                           // 16: music_streaming.music.song.Song
	(*PaginationInfo)(nil),                 // 17: music_streaming.common.PaginationInfo
}
var file_protos_v1_playlist_proto_depIdxs = []int32{
	16, // 0: music_streaming.music.playlist.Playlist.songs:type_name -> music_streaming.music.song.Song
	17, // 1: music_streaming.music.playlist.GetPlaylistListRequest.pagination_info:type_name -> music_streaming.common.PaginationInfo
	2,  // 2: music_streaming.music.playlist.GetPlaylistListRequest.filter:type_name -> music_streaming.music.playlist.GetPlaylistListFilter
	4,  // 3: music_streaming.music.playlist.GetPlaylistListResponse.data:type_name -> music_streaming.music.playlist.GetPlaylistListResponseData
	0,  // 4: music_streaming.music.playlist.GetPlaylistListResponseData.playlists:type_name -> music_streaming.music.playlist.Playlist
	7,  // 5: music_streaming.music.playlist.GetPlaylistDetailsResponse.data:type_name -> music_streaming.music.playlist.GetPlaylistDetailsResponseData
	0,  // 6: music_streaming.music.playlist.GetPlaylistDetailsResponseData.Playlist:type_name -> music_streaming.music.playlist.Playlist
	0,  // 7: music_streaming.music.playlist.CreatePlaylistRequest.playlist:type_name -> music_streaming.music.playlist.Playlist
	0,  // 8: music_streaming.music.playlist.PutPlaylistRequest.playlist:type_name -> music_streaming.music.playlist.Playlist
	1,  // 9: music_streaming.music.playlist.PlaylistService.GetPlaylistList:input_type -> music_streaming.music.playlist.GetPlaylistListRequest
	5,  // 10: music_streaming.music.playlist.PlaylistService.GetPlaylistDetails:input_type -> music_streaming.music.playlist.GetPlaylistDetailsRequest
	8,  // 11: music_streaming.music.playlist.PlaylistService.CreatePlaylist:input_type -> music_streaming.music.playlist.CreatePlaylistRequest
	10, // 12: music_streaming.music.playlist.PlaylistService.PutPlaylist:input_type -> music_streaming.music.playlist.PutPlaylistRequest
	12, // 13: music_streaming.music.playlist.PlaylistService.DeletePlaylist:input_type -> music_streaming.music.playlist.DeletePlaylistRequest
	14, // 14: music_streaming.music.playlist.PlaylistService.UpdatePlaylistSongs:input_type -> music_streaming.music.playlist.UpdatePlaylistSongsRequest
	3,  // 15: music_streaming.music.playlist.PlaylistService.GetPlaylistList:output_type -> music_streaming.music.playlist.GetPlaylistListResponse
	6,  // 16: music_streaming.music.playlist.PlaylistService.GetPlaylistDetails:output_type -> music_streaming.music.playlist.GetPlaylistDetailsResponse
	9,  // 17: music_streaming.music.playlist.PlaylistService.CreatePlaylist:output_type -> music_streaming.music.playlist.CreatePlaylistResponse
	11, // 18: music_streaming.music.playlist.PlaylistService.PutPlaylist:output_type -> music_streaming.music.playlist.PutPlaylistResponse
	13, // 19: music_streaming.music.playlist.PlaylistService.DeletePlaylist:output_type -> music_streaming.music.playlist.DeletePlaylistResponse
	15, // 20: music_streaming.music.playlist.PlaylistService.UpdatePlaylistSongs:output_type -> music_streaming.music.playlist.UpdatePlaylistSongsResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protos_v1_playlist_proto_init() }
func file_protos_v1_playlist_proto_init() {
	if File_protos_v1_playlist_proto != nil {
		return
	}
	file_protos_v1_common_proto_init()
	file_protos_v1_song_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_v1_playlist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistDetailsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlaylistSongsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_playlist_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlaylistSongsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_v1_playlist_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_protos_v1_playlist_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_protos_v1_playlist_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_protos_v1_playlist_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_protos_v1_playlist_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_protos_v1_playlist_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_protos_v1_playlist_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_v1_playlist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_v1_playlist_proto_goTypes,
		DependencyIndexes: file_protos_v1_playlist_proto_depIdxs,
		MessageInfos:      file_protos_v1_playlist_proto_msgTypes,
	}.Build()
	File_protos_v1_playlist_proto = out.File
	file_protos_v1_playlist_proto_rawDesc = nil
	file_protos_v1_playlist_proto_goTypes = nil
	file_protos_v1_playlist_proto_depIdxs = nil
}
