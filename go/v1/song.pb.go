// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: protos/v1/song.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId   uint64          `protobuf:"varint,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	Name     string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Genre    *NameValueInt32 `protobuf:"bytes,3,opt,name=genre,proto3" json:"genre,omitempty"` // Update this
	Artist   string          `protobuf:"bytes,4,opt,name=artist,proto3" json:"artist,omitempty"`
	Duration float32         `protobuf:"fixed32,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Language string          `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	Rating   float32         `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	// Check this
	ResourceId   string `protobuf:"bytes,8,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceLink string `protobuf:"bytes,9,opt,name=resource_link,json=resourceLink,proto3" json:"resource_link,omitempty"`
	CreatedAt    uint64 `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    uint64 `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status       uint32 `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{0}
}

func (x *Song) GetSongId() uint64 {
	if x != nil {
		return x.SongId
	}
	return 0
}

func (x *Song) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Song) GetGenre() *NameValueInt32 {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *Song) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Song) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Song) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Song) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Song) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Song) GetResourceLink() string {
	if x != nil {
		return x.ResourceLink
	}
	return ""
}

func (x *Song) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Song) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Song) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Get Song List
type GetSongListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationInfo *PaginationInfo    `protobuf:"bytes,1,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
	Filter         *GetSongListFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetSongListRequest) Reset() {
	*x = GetSongListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongListRequest) ProtoMessage() {}

func (x *GetSongListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongListRequest.ProtoReflect.Descriptor instead.
func (*GetSongListRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{1}
}

func (x *GetSongListRequest) GetPaginationInfo() *PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

func (x *GetSongListRequest) GetFilter() *GetSongListFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetSongListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Genre           uint32  `protobuf:"varint,2,opt,name=genre,proto3" json:"genre,omitempty"`
	Artist          string  `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Duration        float32 `protobuf:"fixed32,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Language        string  `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	CreatedTimeFrom uint64  `protobuf:"varint,6,opt,name=created_time_from,json=createdTimeFrom,proto3" json:"created_time_from,omitempty"`
	CreatedTimeTo   uint64  `protobuf:"varint,7,opt,name=created_time_to,json=createdTimeTo,proto3" json:"created_time_to,omitempty"`
}

func (x *GetSongListFilter) Reset() {
	*x = GetSongListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongListFilter) ProtoMessage() {}

func (x *GetSongListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongListFilter.ProtoReflect.Descriptor instead.
func (*GetSongListFilter) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{2}
}

func (x *GetSongListFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSongListFilter) GetGenre() uint32 {
	if x != nil {
		return x.Genre
	}
	return 0
}

func (x *GetSongListFilter) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *GetSongListFilter) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *GetSongListFilter) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetSongListFilter) GetCreatedTimeFrom() uint64 {
	if x != nil {
		return x.CreatedTimeFrom
	}
	return 0
}

func (x *GetSongListFilter) GetCreatedTimeTo() uint64 {
	if x != nil {
		return x.CreatedTimeTo
	}
	return 0
}

type GetSongListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *GetSongListResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error    *uint32                  `protobuf:"varint,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string                  `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *GetSongListResponse) Reset() {
	*x = GetSongListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongListResponse) ProtoMessage() {}

func (x *GetSongListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongListResponse.ProtoReflect.Descriptor instead.
func (*GetSongListResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{3}
}

func (x *GetSongListResponse) GetData() *GetSongListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSongListResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *GetSongListResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type GetSongListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Songs      []*Song `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	TotalCount *uint64 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3,oneof" json:"total_count,omitempty"`
}

func (x *GetSongListResponseData) Reset() {
	*x = GetSongListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongListResponseData) ProtoMessage() {}

func (x *GetSongListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongListResponseData.ProtoReflect.Descriptor instead.
func (*GetSongListResponseData) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{4}
}

func (x *GetSongListResponseData) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

func (x *GetSongListResponseData) GetTotalCount() uint64 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// Get Song Details
type GetSongDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId uint64 `protobuf:"varint,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *GetSongDetailsRequest) Reset() {
	*x = GetSongDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongDetailsRequest) ProtoMessage() {}

func (x *GetSongDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetSongDetailsRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{5}
}

func (x *GetSongDetailsRequest) GetSongId() uint64 {
	if x != nil {
		return x.SongId
	}
	return 0
}

type GetSongDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *GetSongDetailsResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error    *uint32                     `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string                     `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *GetSongDetailsResponse) Reset() {
	*x = GetSongDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongDetailsResponse) ProtoMessage() {}

func (x *GetSongDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetSongDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{6}
}

func (x *GetSongDetailsResponse) GetData() *GetSongDetailsResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSongDetailsResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *GetSongDetailsResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type GetSongDetailsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Song *Song `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
}

func (x *GetSongDetailsResponseData) Reset() {
	*x = GetSongDetailsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongDetailsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongDetailsResponseData) ProtoMessage() {}

func (x *GetSongDetailsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongDetailsResponseData.ProtoReflect.Descriptor instead.
func (*GetSongDetailsResponseData) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{7}
}

func (x *GetSongDetailsResponseData) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

// Create Song
type CreateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Song *Song `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
}

func (x *CreateSongRequest) Reset() {
	*x = CreateSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongRequest) ProtoMessage() {}

func (x *CreateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongRequest.ProtoReflect.Descriptor instead.
func (*CreateSongRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSongRequest) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type CreateSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *CreateSongResponse) Reset() {
	*x = CreateSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongResponse) ProtoMessage() {}

func (x *CreateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongResponse.ProtoReflect.Descriptor instead.
func (*CreateSongResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSongResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *CreateSongResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

// Put Song
type PutSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Song *Song `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
}

func (x *PutSongRequest) Reset() {
	*x = PutSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutSongRequest) ProtoMessage() {}

func (x *PutSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutSongRequest.ProtoReflect.Descriptor instead.
func (*PutSongRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{10}
}

func (x *PutSongRequest) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type PutSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *PutSongResponse) Reset() {
	*x = PutSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutSongResponse) ProtoMessage() {}

func (x *PutSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutSongResponse.ProtoReflect.Descriptor instead.
func (*PutSongResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{11}
}

func (x *PutSongResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *PutSongResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

// Delete Song
type DeleteSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId uint64 `protobuf:"varint,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *DeleteSongRequest) Reset() {
	*x = DeleteSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongRequest) ProtoMessage() {}

func (x *DeleteSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongRequest.ProtoReflect.Descriptor instead.
func (*DeleteSongRequest) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSongRequest) GetSongId() uint64 {
	if x != nil {
		return x.SongId
	}
	return 0
}

type DeleteSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *uint32 `protobuf:"varint,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *DeleteSongResponse) Reset() {
	*x = DeleteSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_v1_song_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongResponse) ProtoMessage() {}

func (x *DeleteSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_v1_song_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongResponse.ProtoReflect.Descriptor instead.
func (*DeleteSongResponse) Descriptor() ([]byte, []int) {
	return file_protos_v1_song_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSongResponse) GetError() uint32 {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return 0
}

func (x *DeleteSongResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

var File_protos_v1_song_proto protoreflect.FileDescriptor

var file_protos_v1_song_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f,
	0x6e, 0x67, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x02, 0x0a, 0x04, 0x53, 0x6f, 0x6e,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0xe1, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e,
	0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x22, 0x52, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x34, 0x0a, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x04, 0x73, 0x6f, 0x6e, 0x67, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x6e, 0x67,
	0x22, 0x69, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x0e, 0x50,
	0x75, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x04, 0x73, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73,
	0x6f, 0x6e, 0x67, 0x22, 0x66, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x2c, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x73, 0x67, 0x32, 0x89, 0x06, 0x0a, 0x0b, 0x53, 0x6f, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6f, 0x6e, 0x67, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x31,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6f, 0x6e, 0x67, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x98,
	0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x2d, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x6e, 0x67, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x07, 0x50, 0x75,
	0x74, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f,
	0x6e, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x50,
	0x75, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x74,
	0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x95, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x2d, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x6f, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x20,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x6f, 0x6e, 0x67, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x6e, 0x67,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_protos_v1_song_proto_rawDescOnce sync.Once
	file_protos_v1_song_proto_rawDescData = file_protos_v1_song_proto_rawDesc
)

func file_protos_v1_song_proto_rawDescGZIP() []byte {
	file_protos_v1_song_proto_rawDescOnce.Do(func() {
		file_protos_v1_song_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_v1_song_proto_rawDescData)
	})
	return file_protos_v1_song_proto_rawDescData
}

var file_protos_v1_song_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protos_v1_song_proto_goTypes = []interface{}{
	(*Song)(nil),                       // 0: music_streaming.music.song.Song
	(*GetSongListRequest)(nil),         // 1: music_streaming.music.song.GetSongListRequest
	(*GetSongListFilter)(nil),          // 2: music_streaming.music.song.GetSongListFilter
	(*GetSongListResponse)(nil),        // 3: music_streaming.music.song.GetSongListResponse
	(*GetSongListResponseData)(nil),    // 4: music_streaming.music.song.GetSongListResponseData
	(*GetSongDetailsRequest)(nil),      // 5: music_streaming.music.song.GetSongDetailsRequest
	(*GetSongDetailsResponse)(nil),     // 6: music_streaming.music.song.GetSongDetailsResponse
	(*GetSongDetailsResponseData)(nil), // 7: music_streaming.music.song.GetSongDetailsResponseData
	(*CreateSongRequest)(nil),          // 8: music_streaming.music.song.CreateSongRequest
	(*CreateSongResponse)(nil),         // 9: music_streaming.music.song.CreateSongResponse
	(*PutSongRequest)(nil),             // 10: music_streaming.music.song.PutSongRequest
	(*PutSongResponse)(nil),            // 11: music_streaming.music.song.PutSongResponse
	(*DeleteSongRequest)(nil),          // 12: music_streaming.music.song.DeleteSongRequest
	(*DeleteSongResponse)(nil),         // 13: music_streaming.music.song.DeleteSongResponse
	(*NameValueInt32)(nil),             // 14: music_streaming.common.NameValueInt32
	(*PaginationInfo)(nil),             // 15: music_streaming.common.PaginationInfo
}
var file_protos_v1_song_proto_depIdxs = []int32{
	14, // 0: music_streaming.music.song.Song.genre:type_name -> music_streaming.common.NameValueInt32
	15, // 1: music_streaming.music.song.GetSongListRequest.pagination_info:type_name -> music_streaming.common.PaginationInfo
	2,  // 2: music_streaming.music.song.GetSongListRequest.filter:type_name -> music_streaming.music.song.GetSongListFilter
	4,  // 3: music_streaming.music.song.GetSongListResponse.data:type_name -> music_streaming.music.song.GetSongListResponseData
	0,  // 4: music_streaming.music.song.GetSongListResponseData.songs:type_name -> music_streaming.music.song.Song
	7,  // 5: music_streaming.music.song.GetSongDetailsResponse.data:type_name -> music_streaming.music.song.GetSongDetailsResponseData
	0,  // 6: music_streaming.music.song.GetSongDetailsResponseData.song:type_name -> music_streaming.music.song.Song
	0,  // 7: music_streaming.music.song.CreateSongRequest.song:type_name -> music_streaming.music.song.Song
	0,  // 8: music_streaming.music.song.PutSongRequest.song:type_name -> music_streaming.music.song.Song
	1,  // 9: music_streaming.music.song.SongService.GetSongList:input_type -> music_streaming.music.song.GetSongListRequest
	5,  // 10: music_streaming.music.song.SongService.GetSongDetails:input_type -> music_streaming.music.song.GetSongDetailsRequest
	8,  // 11: music_streaming.music.song.SongService.CreateSong:input_type -> music_streaming.music.song.CreateSongRequest
	10, // 12: music_streaming.music.song.SongService.PutSong:input_type -> music_streaming.music.song.PutSongRequest
	12, // 13: music_streaming.music.song.SongService.DeleteSong:input_type -> music_streaming.music.song.DeleteSongRequest
	3,  // 14: music_streaming.music.song.SongService.GetSongList:output_type -> music_streaming.music.song.GetSongListResponse
	6,  // 15: music_streaming.music.song.SongService.GetSongDetails:output_type -> music_streaming.music.song.GetSongDetailsResponse
	9,  // 16: music_streaming.music.song.SongService.CreateSong:output_type -> music_streaming.music.song.CreateSongResponse
	11, // 17: music_streaming.music.song.SongService.PutSong:output_type -> music_streaming.music.song.PutSongResponse
	13, // 18: music_streaming.music.song.SongService.DeleteSong:output_type -> music_streaming.music.song.DeleteSongResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protos_v1_song_proto_init() }
func file_protos_v1_song_proto_init() {
	if File_protos_v1_song_proto != nil {
		return
	}
	file_protos_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_v1_song_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Song); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongDetailsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_v1_song_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_v1_song_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_protos_v1_song_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_protos_v1_song_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_protos_v1_song_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_protos_v1_song_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_protos_v1_song_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_v1_song_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_v1_song_proto_goTypes,
		DependencyIndexes: file_protos_v1_song_proto_depIdxs,
		MessageInfos:      file_protos_v1_song_proto_msgTypes,
	}.Build()
	File_protos_v1_song_proto = out.File
	file_protos_v1_song_proto_rawDesc = nil
	file_protos_v1_song_proto_goTypes = nil
	file_protos_v1_song_proto_depIdxs = nil
}
